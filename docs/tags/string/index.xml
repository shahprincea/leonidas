<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>string on Programmer</title>
    <link>https://shahprincea.github.io/leonidas/tags/string/</link>
    <description>Recent content in string on Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shahprincea.github.io/leonidas/tags/string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Permutation of the string</title>
      <link>https://shahprincea.github.io/leonidas/post/permutation-string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shahprincea.github.io/leonidas/post/permutation-string/</guid>
      <description>Permutation of the String Given a string return all its permutation. One way to understand this is to draw a tree for small string.
The high level logic is to print all the permutation with first character lock. Then go into recursion and lock second position and print all its permutation and so on.
Base case is when start point reaches the length of the input string.
public List&amp;lt;String&amp;gt; permutation(String str) { List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(); if(str == null || str.</description>
    </item>
    
  </channel>
</rss>